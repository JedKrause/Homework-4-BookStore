@model PaginatedList<Homework_4_BookStore.Models.Book>
@using Microsoft.AspNetCore.Http;
   
@{
    ViewData["Title"] = "Home";
    Layout = "/Views/Shop/_ShopLayout.cshtml";

    if (Context.Session.GetString("ValidUser") == "true")
    {
        <h2>Welcome @Context.Session.GetString("Username")</h2>

        <form asp-action="Buy" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by name or genre: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Buy">Back to Full List</a>
                </p>
            </div>
        </form>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    <a asp-action="Buy" asp-route-sortOrder=@ViewData["NameSortParm"] asp-route-currentFilter=@ViewData["CurrentFilter"]>Title</a>
                </th>
                <th>
                    <a asp-action="Buy" asp-route-sortOrder=@ViewData["GenreSortParm"] asp-route-currentFilter=@ViewData["CurrentFilter"]>Genre</a>
                </th>
                <th>
                    Price
                </th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img src="~/images/@item.Path" style="max-height:100px" class="thumbnail" alt="" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <a asp-action="BookDetail" asp-route-id="@item.BookID">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

        <a asp-action="Buy"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex -1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled btn">Previous</a>

            <a asp-action="Buy"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.PageIndex +1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="btn btn-default @nextDisabled btn">Next</a>
    }
    else
    {
<h1>Invalid Login</h1>
<li class="btn btn-primary"><a asp-area="" asp-controller="Shop" asp-action="Login" style="color:white">Return to Login</a></li>
    }
}